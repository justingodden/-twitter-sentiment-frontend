{"version":3,"sources":["images/logo.svg","context/TweetContext.js","components/molecules/Nav.js","components/molecules/Toolbar.js","components/molecules/TopDashboard.js","components/atoms/LineChart.js","components/atoms/BarChart.js","components/molecules/MiddleDashboard.js","components/molecules/BottomDashboard.js","components/organisms/Dashboard.js","views/ContentBody.js","App.js","index.js"],"names":["TweetContext","createContext","TweetProvider","props","useState","totals","total","total_pos","total_neg","total_neu","line","dates","pos_tweets_per_day","bar","tweets_per_day","tweets","id_max_pos","id_max_neg","id_max_retweets","full_text_pos","full_text_neg","full_text_retweets","tweet","setTweet","Provider","value","children","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","Nav","classes","useContext","loading","setLoading","search","setSearch","e","a","preventDefault","axios","post","then","res","data","catch","err","alert","Backdrop","className","open","CircularProgress","src","require","default","alt","onSubmit","type","placeholder","onChange","target","Toolbar","TopDashboard","style","LineChart","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","redraw","options","responsive","maintainAspectRatio","title","display","text","legend","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","BarChart","label","hoverBackgroundColor","hoverBorderColor","MiddleDashboard","BottomDashboard","id","cards","conversation","dnt","align","width","Dashboard","ContentBody","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aae5576.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d9aa38f3.svg\";","import React, { useState, createContext } from 'react'\r\n\r\n\r\nexport const TweetContext = createContext()\r\n\r\nexport const TweetProvider = props => {\r\n    const [tweet, setTweet] = useState(\r\n            {\r\n                totals:\r\n                {\r\n                    total: '--',\r\n                    total_pos: '--',\r\n                    total_neg: '--',\r\n                    total_neu: '--'\r\n                },\r\n                line: {\r\n                    dates: [\"01/01/2021\", \"02/01/2021\", \"03/01/2021\", \"04/01/2021\", \"05/01/2021\", \"06/01/2021\", \"07/01/2021\", \"08/01/2021\"],\r\n                    pos_tweets_per_day: [null, null, null, null, null, null, null]\r\n                },\r\n                bar: {\r\n                    dates: [\"01/01/2021\", \"02/01/2021\", \"03/01/2021\", \"04/01/2021\", \"05/01/2021\", \"06/01/2021\", \"07/01/2021\", \"08/01/2021\"],\r\n                    tweets_per_day: [null, null, null, null, null, null, null]\r\n                },\r\n                tweets: {\r\n                    id_max_pos: '',\r\n                    id_max_neg: '',\r\n                    id_max_retweets: '',\r\n                    full_text_pos: '',\r\n                    full_text_neg: '',\r\n                    full_text_retweets: ''\r\n                }\r\n            }\r\n        )\r\n    return(\r\n        <TweetContext.Provider value={[tweet, setTweet]}>\r\n            { props.children }\r\n        </TweetContext.Provider>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport axios from 'axios'\r\nimport { TweetContext } from '../../context/TweetContext';\r\nimport { Backdrop, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction Nav() {\r\n    const classes = useStyles();\r\n    const [tweet, setTweet] = useContext(TweetContext)\r\n    const [loading, setLoading] = useState(false)\r\n    const [search, setSearch] = useState({})\r\n\r\n    async function onSubmit (e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        await axios.post('https://sentient-twitter.herokuapp.com/', search).\r\n            then(res => res.data)\r\n            .then((data) => {\r\n                setLoading(false)\r\n                setTweet(data)\r\n            })\r\n            .catch(err => {\r\n                alert(\"Sorry, theres been an error.\")\r\n                setLoading(false)\r\n                })\r\n            }\r\n\r\n    return (\r\n        <>\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress/>\r\n            </Backdrop>\r\n            <div className=\"navBar\">\r\n                <div className=\"navBar__left\">\r\n                    <img className=\"navLogo\" src={require('../../images/logo.svg').default} alt=''/>\r\n                    <h2>Sentient</h2>\r\n                </div>\r\n                <div className=\"navBar__right\">\r\n                    <form className=\"searchContainer\" onSubmit={onSubmit}>\r\n                        <FaSearch className=\"searchIcon\" />\r\n                        <input\r\n                            className=\"searchBar\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search...\"\r\n                            onChange={e => setSearch({search: e.target.value})}\r\n                            \r\n                        />\r\n                    </form>\r\n                </div>\r\n                    \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport { FaChartBar, FaAngleDoubleRight } from \"react-icons/fa\";\r\n\r\nfunction Toolbar() {\r\n    return (\r\n        <div className=\"toolbar\" >\r\n            <div className=\"toolbarItem\">\r\n                <FaChartBar className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">Dashboard</h3>\r\n            </div>\r\n            <div className=\"toolbarItem\">\r\n                <FaAngleDoubleRight className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">These</h3>\r\n            </div>\r\n            <div className=\"toolbarItem\">\r\n                <FaAngleDoubleRight className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">don't</h3>\r\n            </div>\r\n            <div className=\"toolbarItem\">\r\n                <FaAngleDoubleRight className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">do</h3>\r\n            </div>\r\n            <div className=\"toolbarItem\">\r\n                <FaAngleDoubleRight className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">anything</h3>\r\n            </div>\r\n            <div className=\"toolbarItem\">\r\n                <FaAngleDoubleRight className=\"toolbarItem__icon\"/>\r\n                <h3 className=\"toolbarItem__text\">yet!</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar","import React, { useContext } from 'react'\r\nimport { TweetContext } from '../../context/TweetContext';\r\n\r\n\r\nfunction TopDashboard() {\r\n    const [{ totals: { total, total_pos, total_neg, total_neu}}, setTweet] = useContext(TweetContext)\r\n\r\n    return (\r\n        <div className=\"topDashboard\">\r\n            <div className=\"topDashboard__item\">\r\n                <h4 className=\"topDashboard__itemText\">Total</h4>\r\n                <h2 style={{color:'rgba(255, 46, 245, 1)'}}>{total}</h2>\r\n            </div>\r\n            <div className=\"topDashboard__item\">\r\n                <h4 className=\"topDashboard__itemText\">Positive</h4>\r\n                <h2 style={{color:'rgba(75, 192, 192, 1)'}}>{total_pos}</h2>\r\n            </div>\r\n            <div className=\"topDashboard__item\">\r\n                <h4 className=\"topDashboard__itemText\">Negative</h4>\r\n                <h2 style={{color:'rgba(153, 102, 255, 1)'}}>{total_neg}</h2>\r\n            </div>\r\n            <div className=\"topDashboard__item\">\r\n                <h4 className=\"topDashboard__itemText\">Neutral</h4>\r\n                <h2 style={{color:'rgba(54, 162, 235, 1)'}}>{total_neu}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopDashboard\r\n","import React, { useContext } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { TweetContext } from '../../context/TweetContext';\r\n\r\n\r\nfunction LineChart() {\r\n    const [{ line: { dates, pos_tweets_per_day }}, setTweet] = useContext(TweetContext)\r\n\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n            {\r\n            fill: 'start',\r\n            lineTension: 0.2,\r\n            backgroundColor: 'rgba(255, 46, 245, .1)',\r\n            borderColor: 'rgba(255, 46, 245, 1)',\r\n            borderWidth:1,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(255, 46, 245, 1)',\r\n            pointBackgroundColor: 'rgba(255, 46, 245, 1)',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(255, 46, 245, 1)',\r\n            pointHoverBorderColor: 'rgba(255, 46, 245, 1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 2,\r\n            pointHitRadius: 10,\r\n            data: pos_tweets_per_day\r\n            }\r\n        ]\r\n        };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Line className=\"lineChart\"\r\n            redraw={true}\r\n                data={data} options={{\r\n                    responsive:true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text: \"% Positive or Neutral tweets per day\"\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            gridLines: {\r\n                                display: false\r\n                            },\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useContext } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { TweetContext } from '../../context/TweetContext';\r\n\r\n\r\nfunction BarChart() {\r\n    const [{ bar: { dates, tweets_per_day }}, setTweet] = useContext(TweetContext)\r\n\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n            {\r\n            label: 'My First dataset',\r\n            //   backgroundColor: 'rgba(255,99,132,0.2)',\r\n            //   borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255, 46, 245, 0.2)',\r\n            hoverBorderColor: 'rgba(255, 46, 245, 1)',\r\n            data: tweets_per_day,\r\n            backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n            }\r\n        ]\r\n        };\r\n\r\n    return (\r\n        <>\r\n            <Bar className=\"barChart\"\r\n                data={data}\r\n                // width={100}\r\n                // height={200}\r\n                options={{\r\n                    responsive:true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text: \"Tweets per day\"\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            gridLines: {\r\n                                display: false\r\n                            },\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BarChart\r\n","import React from 'react'\r\nimport LineChart from '../atoms/LineChart'\r\nimport BarChart from '../atoms/BarChart'\r\n\r\nfunction MiddleDashboard() {\r\n    return (\r\n        <div className=\"middleDashboard\">\r\n            <div className=\"middleDashboard__itemLeft\">\r\n                <LineChart />\r\n            </div>\r\n            <div className=\"middleDashboard__itemRight\">\r\n                <BarChart />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiddleDashboard\r\n","import React, { useContext } from 'react'\r\nimport TweetEmbed from 'react-tweet-embed'\r\nimport { TweetContext } from '../../context/TweetContext';\r\n\r\nfunction BottomDashboard() {\r\n    const [{ tweets: { id_max_pos, id_max_neg, id_max_retweets,\r\n    full_text_pos, full_text_neg, full_text_retweets }}, \r\n        setTweet] = useContext(TweetContext)\r\n\r\n    return (\r\n        <div className=\"bottomDashboard\">\r\n            <div className=\"bottomDashboard__item\">\r\n                <h4 className=\"bottomDashboard__itemText\">Most positive</h4>\r\n                <TweetEmbed\r\n                    className=\"tweet\"\r\n                    id={id_max_pos}\r\n                    options={{\r\n                        cards: 'hidden',\r\n                        conversation: 'none',\r\n                        dnt: true,\r\n                        align: 'center',\r\n                        width: 250\r\n                    }}\r\n                />\r\n                <h6 className=\"tweetText\">{full_text_pos}</h6>\r\n            </div>\r\n            <div className=\"bottomDashboard__item\">\r\n                <h4 className=\"bottomDashboard__itemText\">Least positive</h4>\r\n                <TweetEmbed\r\n                    className=\"tweet\"\r\n                    id={id_max_neg}\r\n                    options={{\r\n                        cards: 'hidden',\r\n                        conversation: 'none',\r\n                        dnt: true,\r\n                        align: 'center',\r\n                        width: 250\r\n                    }}\r\n                />\r\n                <h6 className=\"tweetText\">{full_text_neg}</h6>\r\n            </div>\r\n            <div className=\"bottomDashboard__item\" id=\"mostRetweeted\">\r\n                <h4 className=\"bottomDashboard__itemText\">Most Retweeted</h4>\r\n                <TweetEmbed\r\n                    className=\"tweet\"\r\n                    id={id_max_retweets}\r\n                    options={{\r\n                        cards: 'hidden',\r\n                        conversation: 'none',\r\n                        dnt: true,\r\n                        align: 'center',\r\n                        width: 250\r\n                    }}\r\n                />\r\n                <h6 className=\"tweetText\">{full_text_retweets}</h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomDashboard\r\n","import React from 'react'\r\nimport TopDashboard from '../molecules/TopDashboard'\r\nimport MiddleDashboard from '../molecules/MiddleDashboard'\r\nimport BottomDashboard from '../molecules/BottomDashboard'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboardHeader\">\r\n                <h2>Dashboard</h2>\r\n                <h5>The past week's breakdown of your search-term</h5>\r\n            </div>\r\n            <TopDashboard />\r\n            <MiddleDashboard />\r\n            <BottomDashboard />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport Nav from '../components/molecules/Nav'\r\nimport Toolbar from '../components/molecules/Toolbar'\r\nimport Dashboard from '../components/organisms/Dashboard'\r\n\r\nfunction ContentBody() {\r\n    return (\r\n        <div className=\"contentBody\">\r\n            <Nav />\r\n            <div className=\"mainContent\">\r\n                <Toolbar />\r\n                <Dashboard />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentBody\r\n","import './App.css';\nimport ContentBody from './views/ContentBody'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      \n      <ContentBody />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { TweetProvider } from './context/TweetContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TweetProvider>\n      <App />\n    </TweetProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}